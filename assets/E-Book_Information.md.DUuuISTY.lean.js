import{_ as o,c as t,a2 as a,o as c}from"./chunks/framework.Bm4S-XEE.js";const i="/HrenactNET/images/E-Book/Prefab.png",l="/HrenactNET/images/E-Book/PrefabScript.png",d="/HrenactNET/images/E-Book/EditorScript.png",r="/HrenactNET/images/E-Book/OpenEditorScript.png",g=JSON.parse('{"title":"预制件层级","description":"","frontmatter":{"prev":{"text":"使用方法","link":"E-Book/HowToUse"},"next":{"text":"示例页面","link":"E-Book/SamplePage"}},"headers":[],"relativePath":"E-Book/Information.md","filePath":"E-Book/Information.md","lastUpdated":null}'),s={name:"E-Book/Information.md"};function n(p,e,u,h,m,k){return c(),t("div",null,e[0]||(e[0]=[a('<h1 id="预制件层级" tabindex="-1">预制件层级 <a class="header-anchor" href="#预制件层级" aria-label="Permalink to &quot;预制件层级&quot;">​</a></h1><p>预制件本身进行了一定的分类管理，使其观感更加舒适，也便于制作变体。</p><p><img src="'+i+'" alt="Prefab"></p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>图中显示各个物件挂载的组件以及层级树的 Unity 编辑器拓展脚本为 <code>Hierarchy Designer</code>，这是它的网址：<a href="https://assetstore.unity.com/packages/tools/utilities/hierarchy-designer-273928" target="_blank" rel="noreferrer">https://assetstore.unity.com/packages/tools/utilities/hierarchy-designer-273928</a></p></div><ul><li><code>Background/EditorOnly_Background</code>：制作页面时的辅助背景，在上传或运行时会自动删除。</li><li><code>Book_Title</code>：电子书的书名。</li><li><code>Put_Pages_Inside_ME</code>：存放书本的所有页面。</li></ul><h1 id="预制件脚本" tabindex="-1">预制件脚本 <a class="header-anchor" href="#预制件脚本" aria-label="Permalink to &quot;预制件脚本&quot;">​</a></h1><p>预制件默认附带已经设定好的脚本，你可以开箱即用。如果你想高度自定义，下方也列出了每个部件的用途，供参考。</p><p><img src="'+l+'" alt="PrefabScript"></p><h2 id="数据持久化" tabindex="-1">数据持久化 <a class="header-anchor" href="#数据持久化" aria-label="Permalink to &quot;数据持久化&quot;">​</a></h2><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><code>Book_Sample_Persistence.prefab</code>使用的脚本为<code>BookPersistence.cs</code>。与<code>Book_Sample.prefab</code>使用的<code>Book.cs</code>不同的是，此脚本支持数据持久化，它将自动保存你翻阅到的页面并在下次进入世界时加载。</p></div><ul><li><code>Book_Page_Key</code>：持久化时使用的键值，请确保每本电子书都使用不同的值，并且与其它支持持久化数据的脚本的值没有冲突。</li></ul><h2 id="书本页面" tabindex="-1">书本页面 <a class="header-anchor" href="#书本页面" aria-label="Permalink to &quot;书本页面&quot;">​</a></h2><ul><li><code>Book Pages</code>：书本页面列表，列表中的顺序应与书本层级 Inspector 中<code>Put_Pages_Inside_ME</code>内的实际页面顺序一致。</li></ul><h2 id="页面控件" tabindex="-1">页面控件 <a class="header-anchor" href="#页面控件" aria-label="Permalink to &quot;页面控件&quot;">​</a></h2><ul><li><code>Previous Page</code>：按下时显示上一页的按钮（string<code>OnClickPreviousPage</code>）。</li><li><code>Next Page</code>：按下时显示下一页的按钮（string<code>OnClickNextPage</code>）。</li><li><code>First Page</code>：按下时回到第一页的按钮（string<code>OnClickFirstPage</code>）。</li><li><code>Page Slider</code>：拖动来切换页面的滑动条。</li><li><code>Page Number</code>：显示当前页面以及总页数的文本。</li></ul><h2 id="锁定拾取" tabindex="-1">锁定拾取 <a class="header-anchor" href="#锁定拾取" aria-label="Permalink to &quot;锁定拾取&quot;">​</a></h2><ul><li><code>Lock Button</code>：打开或关闭 Pickup 的按钮（string<code>_LockButtonToggle</code>）。</li><li><code>Pickup State</code>：显示 Pickup 状态的图像。</li><li><code>Pickup Enabled Sprite</code>：当 Pickup 开启时显示的精灵图。</li><li><code>Pickup Disabled Sprite</code>：当 Pickup 关闭时显示的精灵图。</li></ul><h1 id="text-auto-fill" tabindex="-1">Text Auto Fill <a class="header-anchor" href="#text-auto-fill" aria-label="Permalink to &quot;Text Auto Fill&quot;">​</a></h1><p>此 Unity 编辑器拓展脚本一定程度上简化了大量文本需要添加时的复杂程度，允许你自动化填充文本。</p><p><img src="'+d+'" alt="EditorScript"></p><p>你可以在 Unity 窗口的顶栏<code>Tools/HrenactNET/Text Auto Fill</code>打开它。</p><p><img src="'+r+'" alt="OpenEditorScript"></p><h2 id="界面介绍" tabindex="-1">界面介绍 <a class="header-anchor" href="#界面介绍" aria-label="Permalink to &quot;界面介绍&quot;">​</a></h2><ul><li><code>Load Text from *.txt File (UTF-8)</code>：选择你需要自动生成的 *.txt 文本文件。</li><li><code>Full Text</code>：将被自动填充的文本。如果使用导入 *.txt 文件，此处将显示文件内的文本。</li><li><code>Text Components</code>：将被自动填充的<code>Text</code>组件列表，列表中的顺序应对应书本实际的<code>Text</code>组件顺序。</li><li><code>Auto Fill Text</code>：按下后将把<code>Full Text</code>中的文本按<code>Text Components</code>中的顺序依次填入<code>Text</code>组件中。</li></ul><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>当<code>Full Text</code>于活跃状态（输入框边框为蓝色）时，<code>Load Text from *.txt File (UTF-8)</code>将会失效。你可以通过点击其它窗口来解除活跃状态。</p></div><h2 id="提示信息" tabindex="-1">提示信息 <a class="header-anchor" href="#提示信息" aria-label="Permalink to &quot;提示信息&quot;">​</a></h2><p>当你设置出现疏忽时，脚本将会在<code>Auto Fill Text</code>按钮下方提示对应的信息。</p><ul><li><code>Please assign Text components and input full text.</code>：未设置<code>Full Text</code>或<code>Text Components</code>。请在<code>Full Text</code>中填入文本，并在<code>Text Components</code>拖入足够的<code>Text</code>组件。</li><li><code>Not enough Text components to display all the content.</code>：<code>Text</code>组件不够显示全部的文本，请尝试添加<code>Text</code>组件的数量。</li></ul>',28)]))}const P=o(s,[["render",n]]);export{g as __pageData,P as default};
